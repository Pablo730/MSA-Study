server:
  port: 8001

eureka:
  instance:
    instance-id: ${spring.application.name}:${random.value}
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true

spring:
  application:
    name: gateway-reactive
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: admin
    password: admin
#  config:
#    import: "optional:configserver:http://localhost:8888"
  cloud:
    gateway:
      server:
        webflux:
          routes:
            - id: user-service-register
              uri: lb://MSA-USER-SERVICE
              predicates:
                - Path=/user-service/users
                - Method=POST
              filters:
                - RemoveRequestHeader=Cookie
                - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - id: user-service-login
              uri: lb://MSA-USER-SERVICE
              predicates:
                - Path=/user-service/login
                - Method=POST
              filters:
                - RemoveRequestHeader=Cookie
                - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - id: user-service-actuator
              uri: lb://MSA-USER-SERVICE
              predicates:
                - Path=/user-service/actuator/**
                - Method=GET,POST
              filters:
                - RemoveRequestHeader=Cookie
                - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - id: user-service
              uri: lb://MSA-USER-SERVICE
              predicates:
                - Path=/user-service/**
                - Method=GET
              filters:
                - RemoveRequestHeader=Cookie
                - RewritePath=/user-service/(?<segment>.*), /$\{segment}
                - AuthorizationHeaderFilter
            - id: msa-catalog-service
              uri: lb://MSA-CATALOG-SERVICE
              predicates:
                - Path=/catalog-service/**
            - id: msa-order-service
              uri: lb://MSA-ORDER-SERVICE
              predicates:
                - Path=/order-service/**
            - id: first-service
              uri: lb://MY-FIRST-SERVICE
              predicates:
                - Path=/first-service/**
              filters:
                - AddRequestHeader=f-request, 1st-request-header-by-kotlin
                - AddResponseHeader=f-response, 1st-response-header-from-kotlin
                - CustomFilter
            - id: second-service
              uri: lb://MY-SECOND-SERVICE
              predicates:
                - Path=/second-service/**
              filters:
                - AddRequestHeader=s-request, 2st-request-header-by-kotlin
                - AddResponseHeader=s-response, 2st-response-header-from-kotlin
                - name: CustomFilter
                - name: LoggingFilter
                  args:
                    baseMessage: Hi, there.
                    preLogger: true
                    postLogger: true
          default-filters:
            - name: GlobalFilter
              args:
                baseMessage: Spring Cloud Gateway Webflux Global Filter
                preLogger: true
                postLogger: true

token:
  secret: my-very-long-secret-key-1234567890123456

management:
  endpoints:
    web:
      exposure:
        include:
          - refresh
          - health
          - beans
          - info
          - httpexchanges
          - busrefresh
